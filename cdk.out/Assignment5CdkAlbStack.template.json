{
 "Resources": {
  "EngineeringVpc72B2596A": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/18",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Assignment5CdkAlbStack/EngineeringVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/Resource"
   }
  },
  "EngineeringVpcPublicSubnet1Subnet1Subnet7944C614": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PublicSubnet1"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet1Subnet1"
     }
    ],
    "VpcId": {
     "Ref": "EngineeringVpc72B2596A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet1Subnet1/Subnet"
   }
  },
  "EngineeringVpcPublicSubnet1Subnet1RouteTable9F732811": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet1Subnet1"
     }
    ],
    "VpcId": {
     "Ref": "EngineeringVpc72B2596A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet1Subnet1/RouteTable"
   }
  },
  "EngineeringVpcPublicSubnet1Subnet1RouteTableAssociationF0189A9E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "EngineeringVpcPublicSubnet1Subnet1RouteTable9F732811"
    },
    "SubnetId": {
     "Ref": "EngineeringVpcPublicSubnet1Subnet1Subnet7944C614"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet1Subnet1/RouteTableAssociation"
   }
  },
  "EngineeringVpcPublicSubnet1Subnet1DefaultRoute934184C2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "EngineeringVpcIGWB47AB1A3"
    },
    "RouteTableId": {
     "Ref": "EngineeringVpcPublicSubnet1Subnet1RouteTable9F732811"
    }
   },
   "DependsOn": [
    "EngineeringVpcVPCGW4A6A6B47"
   ],
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet1Subnet1/DefaultRoute"
   }
  },
  "EngineeringVpcPublicSubnet1Subnet2Subnet22D16B9F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PublicSubnet1"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet1Subnet2"
     }
    ],
    "VpcId": {
     "Ref": "EngineeringVpc72B2596A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet1Subnet2/Subnet"
   }
  },
  "EngineeringVpcPublicSubnet1Subnet2RouteTable9C14D674": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet1Subnet2"
     }
    ],
    "VpcId": {
     "Ref": "EngineeringVpc72B2596A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet1Subnet2/RouteTable"
   }
  },
  "EngineeringVpcPublicSubnet1Subnet2RouteTableAssociationEA818DDF": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "EngineeringVpcPublicSubnet1Subnet2RouteTable9C14D674"
    },
    "SubnetId": {
     "Ref": "EngineeringVpcPublicSubnet1Subnet2Subnet22D16B9F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet1Subnet2/RouteTableAssociation"
   }
  },
  "EngineeringVpcPublicSubnet1Subnet2DefaultRoute37459D04": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "EngineeringVpcIGWB47AB1A3"
    },
    "RouteTableId": {
     "Ref": "EngineeringVpcPublicSubnet1Subnet2RouteTable9C14D674"
    }
   },
   "DependsOn": [
    "EngineeringVpcVPCGW4A6A6B47"
   ],
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet1Subnet2/DefaultRoute"
   }
  },
  "EngineeringVpcPublicSubnet2Subnet1SubnetBBA9B8DA": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PublicSubnet2"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet2Subnet1"
     }
    ],
    "VpcId": {
     "Ref": "EngineeringVpc72B2596A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet2Subnet1/Subnet"
   }
  },
  "EngineeringVpcPublicSubnet2Subnet1RouteTableC8BBDB8E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet2Subnet1"
     }
    ],
    "VpcId": {
     "Ref": "EngineeringVpc72B2596A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet2Subnet1/RouteTable"
   }
  },
  "EngineeringVpcPublicSubnet2Subnet1RouteTableAssociationCF6D18A0": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "EngineeringVpcPublicSubnet2Subnet1RouteTableC8BBDB8E"
    },
    "SubnetId": {
     "Ref": "EngineeringVpcPublicSubnet2Subnet1SubnetBBA9B8DA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet2Subnet1/RouteTableAssociation"
   }
  },
  "EngineeringVpcPublicSubnet2Subnet1DefaultRoute94B697F8": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "EngineeringVpcIGWB47AB1A3"
    },
    "RouteTableId": {
     "Ref": "EngineeringVpcPublicSubnet2Subnet1RouteTableC8BBDB8E"
    }
   },
   "DependsOn": [
    "EngineeringVpcVPCGW4A6A6B47"
   ],
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet2Subnet1/DefaultRoute"
   }
  },
  "EngineeringVpcPublicSubnet2Subnet2Subnet3D94DA12": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PublicSubnet2"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet2Subnet2"
     }
    ],
    "VpcId": {
     "Ref": "EngineeringVpc72B2596A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet2Subnet2/Subnet"
   }
  },
  "EngineeringVpcPublicSubnet2Subnet2RouteTable29833B99": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet2Subnet2"
     }
    ],
    "VpcId": {
     "Ref": "EngineeringVpc72B2596A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet2Subnet2/RouteTable"
   }
  },
  "EngineeringVpcPublicSubnet2Subnet2RouteTableAssociation8A94F970": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "EngineeringVpcPublicSubnet2Subnet2RouteTable29833B99"
    },
    "SubnetId": {
     "Ref": "EngineeringVpcPublicSubnet2Subnet2Subnet3D94DA12"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet2Subnet2/RouteTableAssociation"
   }
  },
  "EngineeringVpcPublicSubnet2Subnet2DefaultRoute623A3F45": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "EngineeringVpcIGWB47AB1A3"
    },
    "RouteTableId": {
     "Ref": "EngineeringVpcPublicSubnet2Subnet2RouteTable29833B99"
    }
   },
   "DependsOn": [
    "EngineeringVpcVPCGW4A6A6B47"
   ],
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/PublicSubnet2Subnet2/DefaultRoute"
   }
  },
  "EngineeringVpcIGWB47AB1A3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Assignment5CdkAlbStack/EngineeringVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/IGW"
   }
  },
  "EngineeringVpcVPCGW4A6A6B47": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "EngineeringVpcIGWB47AB1A3"
    },
    "VpcId": {
     "Ref": "EngineeringVpc72B2596A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/VPCGW"
   }
  },
  "EngineeringVpcRestrictDefaultSecurityGroupCustomResourceD2CE7C45": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "EngineeringVpc72B2596A",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringVpc/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "EngineeringVpc72B2596A",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a",
    "aws:asset:property": "Code"
   }
  },
  "WebServerSG4D0F372C": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for web server",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "from 0.0.0.0/0:22",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "from 0.0.0.0/0:80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "EngineeringVpc72B2596A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/WebServerSG/Resource"
   }
  },
  "WebInstanceRole7E7D0E48": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3FullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AdministratorAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/WebInstanceRole/Resource"
   }
  },
  "WebInstanceProfile": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WebInstanceRole7E7D0E48"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/WebInstanceProfile"
   }
  },
  "web1InstanceProfile2B194F4D": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WebInstanceRole7E7D0E48"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/web1/InstanceProfile"
   }
  },
  "web1F1E86AD8": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "web1InstanceProfile2B194F4D"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "KeyName": "test",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "WebServerSG4D0F372C",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "EngineeringVpcPublicSubnet1Subnet1Subnet7944C614"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Assignment5CdkAlbStack/web1"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\nyum update -y\nyum install -y git httpd php\nservice httpd start\nchkconfig httpd on\naws s3 cp s3://seis665-public/index.php /var/www/html/"
    }
   },
   "DependsOn": [
    "WebInstanceRole7E7D0E48"
   ],
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/web1/Resource"
   }
  },
  "web2InstanceProfile149FDA7B": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WebInstanceRole7E7D0E48"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/web2/InstanceProfile"
   }
  },
  "web21D08B09E": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "web2InstanceProfile149FDA7B"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "KeyName": "test",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "WebServerSG4D0F372C",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "EngineeringVpcPublicSubnet1Subnet2Subnet22D16B9F"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Assignment5CdkAlbStack/web2"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\nyum update -y\nyum install -y git httpd php\nservice httpd start\nchkconfig httpd on\naws s3 cp s3://seis665-public/index.php /var/www/html/"
    }
   },
   "DependsOn": [
    "WebInstanceRole7E7D0E48"
   ],
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/web2/Resource"
   }
  },
  "EngineeringLB670590E5": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "EngineeringLBSecurityGroupF425D2CF",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "EngineeringVpcPublicSubnet1Subnet1Subnet7944C614"
     },
     {
      "Ref": "EngineeringVpcPublicSubnet1Subnet2Subnet22D16B9F"
     },
     {
      "Ref": "EngineeringVpcPublicSubnet2Subnet1SubnetBBA9B8DA"
     },
     {
      "Ref": "EngineeringVpcPublicSubnet2Subnet2Subnet3D94DA12"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "EngineeringVpcPublicSubnet1Subnet1DefaultRoute934184C2",
    "EngineeringVpcPublicSubnet1Subnet1RouteTableAssociationF0189A9E",
    "EngineeringVpcPublicSubnet1Subnet2DefaultRoute37459D04",
    "EngineeringVpcPublicSubnet1Subnet2RouteTableAssociationEA818DDF",
    "EngineeringVpcPublicSubnet2Subnet1DefaultRoute94B697F8",
    "EngineeringVpcPublicSubnet2Subnet1RouteTableAssociationCF6D18A0",
    "EngineeringVpcPublicSubnet2Subnet2DefaultRoute623A3F45",
    "EngineeringVpcPublicSubnet2Subnet2RouteTableAssociation8A94F970"
   ],
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringLB/Resource"
   }
  },
  "EngineeringLBSecurityGroupF425D2CF": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB Assignment5CdkAlbStackEngineeringLB1CC47F67",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "EngineeringVpc72B2596A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringLB/SecurityGroup/Resource"
   }
  },
  "EngineeringLBListener2DEE07B0": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "EngineeringLBListenerTargetGroupGroupB682A6AC"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "EngineeringLB670590E5"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringLB/Listener/Resource"
   }
  },
  "EngineeringLBListenerTargetGroupGroupB682A6AC": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "Targets": [
     {
      "Id": {
       "Ref": "web1F1E86AD8"
      },
      "Port": 80
     },
     {
      "Id": {
       "Ref": "web21D08B09E"
      },
      "Port": 80
     }
    ],
    "VpcId": {
     "Ref": "EngineeringVpc72B2596A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/EngineeringLB/Listener/TargetGroupGroup/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VPO2/CMBD+LezGhTB1DAyoUocoQazVxTnginOO7DMIRfnvVUggMHS673GP7xK9XH3qxQyuYW6q89xSqdtCwJwVXMNPiybR7b4xanPgfbZRWSwtmSKWjNJrE8pdFNxBaXHSJy0NwRkCIcfP5h58saBnlC0IXuE2nhlZKgLmVCOLKtBET3Lbeheb+4E34YuDAJtx5YA7RVDrNndDokd92Jl3B7LYKbQQhIx1UJVggQ3x8ZLoNm0aS+Ye+dtBtb576Psdb/y1j4Igjz0P/OLvwB9Rnj+80K5TOQYXff9DDOLqiR74Hyvz7kIV+jUEVGkIKIXAkfjYz2TgoUYZwmwcV9Qn6FR2k5Pjj5VeLvQymf0GormPLFSjzof6B4g8WCIVAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "Assignment5CdkAlbStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}